// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Naviera.API.Data;

#nullable disable

namespace Naviera.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240228014145_CargaContenido")]
    partial class CargaContenido
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Naviera.Shared.Entidades.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BarcoId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("BarcoId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Barco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cap_carga")
                        .HasColumnType("int");

                    b.Property<int>("Cap_personal")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<double>("Peso")
                        .HasColumnType("double");

                    b.Property<int>("Tamaño")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Barcos");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Contacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmpresaIdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaIdEmpresa");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Contenedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<double>("CapMax")
                        .HasColumnType("double");

                    b.Property<double>("CapMin")
                        .HasColumnType("double");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Contenedores");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Contenido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Cantidad")
                        .HasColumnType("double");

                    b.Property<double>("Peso")
                        .HasColumnType("double");

                    b.Property<int>("TipoContenidoId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoContenidoId");

                    b.HasIndex("UnidadId");

                    b.ToTable("Contenidos");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Nit")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<int>("Tercero")
                        .HasColumnType("int");

                    b.HasKey("IdEmpresa");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<int>("ContenedorId")
                        .HasColumnType("int");

                    b.Property<int>("ContenidoId")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaIdEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("ViajeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContenedorId");

                    b.HasIndex("ContenidoId");

                    b.HasIndex("EmpresaIdEmpresa");

                    b.HasIndex("ViajeId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.TipoContenido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TipoContenidos");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Unidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DesCorta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Viaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BarcoId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaInic")
                        .HasColumnType("datetime");

                    b.Property<string>("Inicio")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("BarcoId");

                    b.ToTable("Viajes");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Area", b =>
                {
                    b.HasOne("Naviera.Shared.Entidades.Barco", "Barco")
                        .WithMany("Areas")
                        .HasForeignKey("BarcoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barco");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Contacto", b =>
                {
                    b.HasOne("Naviera.Shared.Entidades.Empresa", "Empresa")
                        .WithMany("Contactos")
                        .HasForeignKey("EmpresaIdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Contenedor", b =>
                {
                    b.HasOne("Naviera.Shared.Entidades.Area", "Area")
                        .WithMany("Contenedor")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Contenido", b =>
                {
                    b.HasOne("Naviera.Shared.Entidades.TipoContenido", "TipoContenido")
                        .WithMany("Contenidos")
                        .HasForeignKey("TipoContenidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Naviera.Shared.Entidades.Unidad", "Unidad")
                        .WithMany("Contenido")
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoContenido");

                    b.Navigation("Unidad");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Ticket", b =>
                {
                    b.HasOne("Naviera.Shared.Entidades.Contenedor", "Contenedor")
                        .WithMany()
                        .HasForeignKey("ContenedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Naviera.Shared.Entidades.Contenido", "Contenido")
                        .WithMany("Tickets")
                        .HasForeignKey("ContenidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Naviera.Shared.Entidades.Empresa", "Empresa")
                        .WithMany("Tickets")
                        .HasForeignKey("EmpresaIdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Naviera.Shared.Entidades.Viaje", "Viaje")
                        .WithMany("Tickets")
                        .HasForeignKey("ViajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contenedor");

                    b.Navigation("Contenido");

                    b.Navigation("Empresa");

                    b.Navigation("Viaje");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Viaje", b =>
                {
                    b.HasOne("Naviera.Shared.Entidades.Barco", "Barco")
                        .WithMany("Viajes")
                        .HasForeignKey("BarcoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barco");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Area", b =>
                {
                    b.Navigation("Contenedor");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Barco", b =>
                {
                    b.Navigation("Areas");

                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Contenido", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Empresa", b =>
                {
                    b.Navigation("Contactos");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.TipoContenido", b =>
                {
                    b.Navigation("Contenidos");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Unidad", b =>
                {
                    b.Navigation("Contenido");
                });

            modelBuilder.Entity("Naviera.Shared.Entidades.Viaje", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
